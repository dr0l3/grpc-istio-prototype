- user service [done]
- conversation service [done]
    - Multiproject setup
- rest api [done]
- local deployment [done]
- kubernetes deployment [done]
- docker file [done]
- istio injection [done]
- personal environment [done]
    - istio routing between two version [done]
        - version configurable with env param [done]
    - send chosen environment in http-header [done]
        - log header in gateway [done]
        - log header in user service [done]
        - routing based onn header [done]
- monitoring
    - (https://github.com/grpc-ecosystem/java-grpc-prometheus)
    - There is no reason why our existing jvm instrumentation shouldn't work
    - Simple dashboards seem to work
    - jaeger seems to work out of the box
        - Need to propagate tracing headers
            - Find a way to display all metadata on incoming request
            - Propagate those relevant headers
            - Figure out how istio propagates the headers
            - https://github.com/grpc/grpc-java/issues/6144
            - It seems that all instrumentation relies on Threadlocals
                - This does not work with cats IO/ZIO and any other non-blocking version implementation that does not gaurantee execution on the same thread.
                - This is due to the fact that you are not guaranteed to have the work scheduled on the same thread.
    - kiali seems to work out of the box (admin/admin)
- pulumi
    - pricing
        - Team Pro: 225$/month for 25 users + 75$/month for each extra user (!)
        - Enterprise: something else
- upgrade of istio [done]
    - It seem they have documented how to do this
    - https://istio.io/docs/setup/upgrade/
    - https://istio.io/docs/setup/upgrade/cni-helm-upgrade/
- scala3 [done]
- mu-scala [done]
    - uses final tagless \_(ãƒ„)_/
    - doesnt seem to offer anything that below stuff doesnt already do
- ZIO/IO integration [done]
    - macros looks cumbersome... macro paradise not supported
    - https://github.com/fiadliel/fs2-grpc <-- seems like it add support for IO/fs2
        - Simple case works
            - sealed traits
            - streams
            - options
            - proto3
        - Built on top of scalapb
        - Looks ready for scala3!!
    - ClientCalls.scala + https://github.com/scalapb/ScalaPB/issues/523 <- interesting files to implementing ZIO/IO/Fs2 support directly into gRPC
- shared definitions (e.g. conversation) [done]
    - Its possible to include files in jarfiles: https://stackoverflow.com/questions/25310052/include-generated-resources-in-a-jar-sbt

istio experimentsz
- routing to non-existent destination
- competing virtual services